generator client {
  provider = "prisma-client-js"
  previewFeatures = ["tracing"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String        @id @default(uuid())
  email     String        @unique
  password  String
  profile   Profile?
  blog      Blog[]
  comment   Comment[]
  likes     CommentLike[]
  blogLikes BlogLike[]
}

model Profile {
  id       String    @id @default(uuid())
  name     String
  bio      String
  user     User      @relation(fields: [userId], references: [id])
  userId   String    @unique
  comments Comment[]
  blogs    Blog[]
}

model Blog {
  id          String     @id @default(uuid())
  title       String
  description String
  blogLike    Int        @default(0)
  blogLikes   BlogLike[]
  comments    Comment[]
  author      User       @relation(fields: [authorId], references: [id])
  authorId    String
  profile     Profile    @relation(fields: [profileId], references: [id])
  profileId   String
}

model BlogLike {
  id        String  @id @default(uuid())
  blogliked Boolean @default(false)
  blog      Blog?   @relation(fields: [blogId], references: [id])
  blogId    String?
  user      User?   @relation(fields: [userId], references: [id]) 
  userId    String?

  @@unique([userId, blogId])
}

model Comment {
  id              String        @id @default(uuid())
  comment         String
  commentLikes    Int           @default(0)
  commentDislikes Int           @default(0)
  user            User?         @relation(fields: [userId], references: [id])
  userId          String?
  blog            Blog          @relation(fields: [blogId], references: [id])
  blogId          String
  profile         Profile?      @relation(fields: [profileId], references: [id])
  profileId       String?
  likes           CommentLike[]
}

model CommentLike {
  id        String  @id @default(uuid())
  liked     Boolean @default(false)
  disliked  Boolean @default(false)
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  comment   Comment @relation(fields: [commentId], references: [id])
  commentId String

  @@unique([userId, commentId])
}